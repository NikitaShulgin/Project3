try:
    from tkinter import*
except:
    from Tkinter import*
import random 

#Размер поля
FIELD_HEIGHT = 400
FIELD_WIDTH = 1000

#Размер шарика
SIZE_BALL = 30

#Размер ракетки
BAT_HEIGHT = 100
BAT_WIDTH = 10

SCORE_1 = 0
SCORE_2 = 0

COUNT_SPEED = 20

root = Tk()
root.title("Пинг-понг")

c = Canvas(root, width = FIELD_WIDTH, height = FIELD_HEIGHT, background = "#00008B")
c.pack()

#Центральная линия(сетка)
c.create_line(FIELD_WIDTH/2, 0, FIELD_WIDTH/2, FIELD_HEIGHT, fill = "#FFFFFF")

BALL = c.create_oval(FIELD_WIDTH/2 - SIZE_BALL/2,
                     FIELD_HEIGHT/2 - SIZE_BALL/2,
                     FIELD_WIDTH/2 + SIZE_BALL/2,
                     FIELD_HEIGHT/2 + SIZE_BALL/2, fill = "#FFD700")

BAT_LEFT = c.create_line(BAT_WIDTH/2,
                         0, BAT_WIDTH/2,
                         BAT_HEIGHT,
                         width = BAT_WIDTH,
                         fill = "#8B0000")
BAT_RIGHT = c.create_line(FIELD_WIDTH - BAT_WIDTH/2,
                          0, FIELD_WIDTH - BAT_WIDTH/2,
                          BAT_HEIGHT,
                          width = BAT_WIDTH,
                          fill = "#8B0000")

#Скорости ракеток и шарика
SPEED_BAT_LEFT = 0
SPEED_BAT_RIGHT = 0
SPEED_BATS = 20

UP_SPEED_BALL = 1.00
MAX_SPEED_BALL = 25
BALL_SPEED = 10
BALL_SPEED_2 = 10
DISTANCE_R_LINE = FIELD_WIDTH - BAT_WIDTH


PLAYER_1 = c.create_text(FIELD_WIDTH - FIELD_WIDTH / 6,
                         BAT_HEIGHT/4,
                         text = SCORE_1,
                         font = 'Broadway 20',
                         fill = '#CD5C5C')
PLAYER_2 = c.create_text(FIELD_WIDTH / 6,
                         BAT_HEIGHT/4,
                         text = SCORE_2,
                         font = 'Broadway 20',
                         fill = '#CD5C5C')



def bats():
    BATS = {BAT_LEFT: SPEED_BAT_LEFT,
            BAT_RIGHT: SPEED_BAT_RIGHT}
    for bat in BATS:
        c.move(bat, 0, BATS[bat])
        if c.coords(bat)[1]<0:
            c.move(bat, 0, - c.coords(bat)[1])
        elif c.coords(bat)[3]>FIELD_HEIGHT:
            c.move(bat, 0, FIELD_HEIGHT - c.coords(bat)[3])

def spawn_ball():
    global BALL_SPEED
    c.coords(BALL, FIELD_WIDTH/2 - SIZE_BALL/2,
             FIELD_HEIGHT/2 - SIZE_BALL/2,
             FIELD_WIDTH/2 + SIZE_BALL/2,
             FIELD_HEIGHT/2 + SIZE_BALL/2)
    
    BALL_SPEED = -(BALL_SPEED * -COUNT_SPEED)/abs(BALL_SPEED)

def score_upd(player):
    global SCORE_1, SCORE_2
    if player == 'right':
        SCORE_1 += 1
        c.itemconfig(PLAYER_1, text = SCORE_1)
    else:
        SCORE_2 += 1
        c.itemconfig(PLAYER_2, text = SCORE_2)

def rebound(action):
    global BALL_SPEED, BALL_SPEED_2
    if action == 'strike':
        BALL_SPEED_2 = random.randrange(-10, 10)
        if abs(BALL_SPEED) < MAX_SPEED_BALL:
            BALL_SPEED *= -UP_SPEED_BALL
        else:
            BALL_SPEED = -BALL_SPEED
    else:
        BALL_SPEED_2 = -BALL_SPEED_2
    
def ball():
    left_ball, top_ball, right_ball, bottom_ball = c.coords(BALL)
    center_ball = (top_ball + bottom_ball) / 2
    if right_ball + BALL_SPEED < DISTANCE_R_LINE and left_ball + BALL_SPEED > BAT_WIDTH:
        c.move(BALL, BALL_SPEED, BALL_SPEED_2)
    elif right_ball == DISTANCE_R_LINE or left_ball == BAT_WIDTH:
        if right_ball > FIELD_WIDTH / 2:
            if c.coords(BAT_RIGHT)[1] < center_ball < c.coords(BAT_RIGHT)[3]:
                rebound('strike')
            else:
                score_upd('left')
                spawn_ball()
        else:
            if c.coords(BAT_LEFT)[1] < center_ball < c.coords(BAT_LEFT)[3]:
                    rebound('strike') 
            else:
                score_upd('right')
                spawn_ball()
    else:
        if right_ball > FIELD_WIDTH / 2:
            c.move(BALL, DISTANCE_R_LINE-right_ball, BALL_SPEED_2)
        else:
            c.move(BALL, -left_ball+BAT_WIDTH, BALL_SPEED_2)
    if top_ball + BALL_SPEED_2 < 0 or bottom_ball+BALL_SPEED_2 > FIELD_HEIGHT:
        rebound('ricochet')
            
def main():
    ball()
    bats()
    root.after(30, main)

c.focus_set()

def bat_stopped(event):
    global SPEED_BAT_LEFT, SPEED_BAT_RIGHT
    if event.keysym in 'ws':
        SPEED_BAT_LEFT = 0
    elif event.keysym in ('Up', 'Down'):
        SPEED_BAT_RIGHT = 0

c.bind("<KeyRelease>", bat_stopped)

def control(event):
    global SPEED_BAT_LEFT, SPEED_BAT_RIGHT
    if event.keysym == 'w':     
        SPEED_BAT_LEFT = -SPEED_BATS
    elif event.keysym == 's':
        SPEED_BAT_LEFT = SPEED_BATS
    elif event.keysym == 'Up':
        SPEED_BAT_RIGHT = -SPEED_BATS
    elif event.keysym == 'Down':
        SPEED_BAT_RIGHT = SPEED_BATS

c.bind("<KeyPress>", control)
         
main()
    
root.mainloop()
